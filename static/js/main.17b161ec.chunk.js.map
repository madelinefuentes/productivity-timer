{"version":3,"sources":["components/TodoList.js","components/Timer.js","sounds/bell.mp3","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["initialFormValues","task","intervals","TodoList","props","useState","formValues","setFormValues","showForm","setShowForm","handleInputChange","e","target","name","value","style","marginLeft","marginRight","className","borderBottom","fontSize","todoList","map","todo","onClick","id","complete","updateCurrentTask","cursor","Row","borderLeft","currentTask","borderTop","borderRight","borderRadius","paddingTop","paddingBottom","margin","Col","textDecoration","currInterval","color","stopPropagation","completeTask","removeTask","padding","marginBottom","xs","span","offset","type","onChange","s","placeholder","autoComplete","marginTop","width","sm","offsetRight","addTask","disabled","parseInt","Timer","elapsedTime","setElapsedTime","startTime","setStartTime","timerOn","setTimerOn","pomodoro","setPomodoro","setCurrInterval","ls","get","date","setDate","studyTime","setStudyTime","setTodoList","setCurrentTask","startPomodoro","startBreak","pressBreak","getRemainingTime","time","focusTime","breakTime","Math","floor","useEffect","localStorage","getItem","JSON","parse","start","Date","now","timer","setInterval","clearInterval","playSound","updateTodoList","currentTaskIndex","findIndex","current","totalIntervals","console","log","setItem","stringify","incrementCurrentTask","set","autoStartBreak","getDate","ButtonGroup","toggle","ToggleButton","variant","checked","height","percent","textSize","textOffsetX","textOffsetY","textRenderer","riseAnimation","riseAnimationTime","waveAnimation","outerRadius","waveFrequency","waveAmplitude","circleStyle","fill","waveStyle","textStyle","fontFamily","waveTextStyle","filter","length","values","index","Header","showSettings","setShowSettings","setFocusTime","setBreakTime","setAutoStartBreak","setIntervals","volume","setVolume","closeSettings","useSound","bell","Navbar","bg","md","Brand","fontWeight","Modal","dialogClassName","size","show","onHide","aria-labelledby","closeButton","Title","Body","Container","val","htmlFor","min","max","Footer","App","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17b161ec.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {Row, Col} from 'react-bootstrap'; \r\nimport '../styling/TodoList.scss'\r\n\r\nconst initialFormValues = {\r\n  task: \"\",\r\n  intervals: 1\r\n};\r\n\r\nfunction TodoList(props) {\r\n  const [formValues, setFormValues] = useState(initialFormValues);\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  function handleInputChange(e){\r\n    const {name, value} = e.target;\r\n\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  function addTask(){\r\n    props.addTask(formValues);\r\n    setFormValues(initialFormValues);\r\n    setShowForm(false);\r\n  }\r\n\r\n  function removeTask(id){\r\n    props.removeTask(id);\r\n  }\r\n\r\n  function completeTask(e, id){\r\n    e.stopPropagation();\r\n    props.completeTask(id);\r\n  }\r\n\r\n  function setCurrentTask(id, complete){\r\n    if(!complete){\r\n      props.updateCurrentTask(id);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <table style = {{marginLeft: \"auto\", marginRight: \"auto\"}} className=\"table col-sm-10 col-md-5\">\r\n        <thead>\r\n          <tr>\r\n            <th><div style = {{borderBottom: '2px solid', fontSize: '18px'}}>Todo List</div></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.todoList != null ? props.todoList.map(todo =>{\r\n            return(\r\n              <tr\r\n                //onMouseEnter={() => setDeletionIndex(todo.id)} \r\n                //onMouseLeave={() => setDeletionIndex(null)}\r\n                onClick = {() => setCurrentTask(todo.id, todo.complete)}\r\n                style = {{cursor: todo.complete ? \"\" : \"pointer\"}}\r\n                key = {todo.id}\r\n              >\r\n                <td>\r\n                  <Row className=\"align-items-center\" \r\n                    style = {{borderLeft: todo.id === props.currentTask ? '5px solid #5AB9EA' : '1px solid #D3D3D3', borderBottom: '1px solid #D3D3D3',\r\n                    borderTop: '1px solid #D3D3D3', borderRight: '1px solid #D3D3D3', borderRadius: '5px', paddingTop: '10px', paddingBottom: '10px', margin:'0px'}}>\r\n                    <Col>\r\n                      <div style = {{textDecoration: todo.complete ? \"line-through\" : \"\"}}>{todo.task}</div>\r\n                    </Col>\r\n                    <Col className = \"d-flex justify-content-center\">\r\n                      <div style = {{textDecoration: todo.complete ? \"line-through\" : \"\"}}>{todo.currInterval}/{todo.intervals}</div>\r\n                    </Col>\r\n                    <Col className = \"d-flex justify-content-end\">\r\n                      <button \r\n                        style={{ color: todo.complete ? \"#09D668\" : \"#C8C8C8\"}} \r\n                        onClick={(e)=>completeTask(e, todo.id)}\r\n                        className=\"btn btn-small shadow-none\">\r\n                        <i className=\"fa fa-check-circle fa-lg\"></i></button>\r\n                      <button \r\n                        //onMouseEnter={() => setDeletionIndex(todo.id)} \r\n                        //onMouseLeave={() => setDeletionIndex(null)}\r\n                        style={{ color: \"#808080\"}} \r\n                        onClick = {()=>removeTask(todo.id)} \r\n                        className=\"btn btn-small shadow-none\">\r\n                        <i className=\"fa fa-trash fa-lg\"></i></button>\r\n                    </Col>\r\n                  </Row>\r\n                </td>\r\n              </tr>\r\n            )}) : \"\"}\r\n            <tr className = \"d-flex justify-content-center\">\r\n              <td>{showForm ? (\r\n                <Row className=\"no-gutters\" style={{ padding: '10px', marginLeft: '0px', marginRight: '0px', marginBottom: '20px' }}>\r\n                  <Col xs={{ span: 8, offset: 2 }} className=\"d-flex justify-content-center\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={formValues.task}\r\n                      name=\"task\"\r\n                      onChange={handleInputChange}\r\n                      className=\"form-control shadow-none\" s\r\n                      placeholder=\"Enter a Task to Work On\"\r\n                      autoComplete=\"off\"\r\n                    />\r\n                  </Col>\r\n                  <Col style ={{marginTop: '10px'}} xs=\"12\" className=\"d-flex justify-content-around\">\r\n                    <div className=\"form-group form-inline\">\r\n                      <label style={{ marginRight: '10px', color: '#555555'}}>Pomodoro: </label>\r\n                      <input\r\n                        value={formValues.intervals}\r\n                        name=\"intervals\"\r\n                        onChange={handleInputChange}\r\n                        className=\"form-control shadow-none\"\r\n                        style={{ width: '40px' }}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm={{ span: 3, offset: 3 }} className=\"d-flex justify-content-center\">\r\n                    <button type=\"button\" style={{ width: \"80px\" }} className=\"btn btn-outline-secondary shadow-none\" onClick={() => setShowForm(false)}>Cancel</button>\r\n                  </Col>\r\n                  <Col sm={{ span: 3, offsetRight: 3 }} className=\"d-flex justify-content-center\">\r\n                    <button\r\n                      type=\"button\"\r\n                      style={{ width: \"80px\" }}\r\n                      className=\"btn btn-outline-secondary shadow-none\"\r\n                      onClick={() => addTask()}\r\n                      disabled={formValues.task === '' || formValues.intervals === '' || parseInt(formValues.intervals) < 1}>\r\n                      Add</button>\r\n                  </Col>\r\n                </Row>\r\n                ) : \r\n                <button \r\n                  style = {{width: \"120px\", marginBottom: \"120px\"}} \r\n                  className=\"btn btn-outline-secondary shadow-none\" \r\n                  onClick={()=>setShowForm(true)}>\r\n                    Add a Task\r\n                </button>}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n \r\nexport default TodoList;","import { useState, useEffect } from 'react';\r\nimport {Row, Col, ButtonGroup, ToggleButton} from 'react-bootstrap';\r\nimport LiquidFillGauge from 'react-liquid-gauge';\r\nimport ls from 'local-storage';\r\nimport TodoList from './TodoList';\r\n\r\nfunction Timer(props) {\r\n    const [elapsedTime, setElapsedTime] = useState(0);\r\n    const [startTime, setStartTime] = useState(0);\r\n    const [timerOn, setTimerOn] = useState(false);\r\n    const [pomodoro, setPomodoro] = useState(true);\r\n    const [currInterval, setCurrInterval] = useState(0);\r\n    const [date, setDate] = useState(ls.get(\"date\") || \"\");\r\n    const [studyTime, setStudyTime] = useState(ls.get(\"studyTime\") || 0);\r\n\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [currentTask, setCurrentTask] = useState(null);\r\n\r\n    useEffect(()=>{\r\n      if(localStorage.getItem(\"todoList\")){\r\n        setTodoList(JSON.parse(localStorage.getItem(\"todoList\")));\r\n      }\r\n    }, []);\r\n\r\n    function addTask(values){\r\n      let updateTodoList = [...(todoList || []), \r\n        {task: values.task, intervals: values.intervals, currInterval: 0, id: Date.now(), complete: false}];\r\n      setTodoList(updateTodoList);\r\n      localStorage.setItem('todoList', JSON.stringify(updateTodoList));\r\n    }\r\n\r\n    function removeTask(id){\r\n      if(id === currentTask){\r\n        setCurrentTask(null);\r\n      }\r\n      let updateTodoList = todoList.filter((todo) => todo.id !== id);\r\n      setTodoList(updateTodoList);\r\n      localStorage.setItem('todoList', JSON.stringify(updateTodoList));\r\n    }\r\n\r\n    function completeTask(id){\r\n      if(id === currentTask){\r\n        setCurrentTask(null);\r\n      }\r\n      let updateTodoList = [...todoList];\r\n      let index = todoList.findIndex(todo => todo.id === id);\r\n      updateTodoList[index].complete = !updateTodoList[index].complete;\r\n      setTodoList(updateTodoList);\r\n      localStorage.setItem('todoList', JSON.stringify(updateTodoList));\r\n    }\r\n\r\n    function updateCurrentTask(id){\r\n      if(currentTask === id){\r\n        setCurrentTask(null);\r\n      }\r\n      else{\r\n        setCurrentTask(id);\r\n      }\r\n    }\r\n\r\n    function incrementCurrentTask(){\r\n      if(currentTask != null){\r\n        let updateTodoList = [...todoList];\r\n        let currentTaskIndex = todoList.findIndex(todo => todo.id === currentTask);\r\n        let current = updateTodoList[currentTaskIndex].currInterval;\r\n        let totalIntervals = updateTodoList[currentTaskIndex].intervals;\r\n        \r\n        if(current < totalIntervals){\r\n          updateTodoList[currentTaskIndex].currInterval = current + 1;\r\n        }\r\n\r\n        console.log('current interval: ' + updateTodoList[currentTaskIndex].currInterval);\r\n        if(current + 1 >= totalIntervals){\r\n          updateTodoList[currentTaskIndex].complete = true;\r\n          setCurrentTask(null);\r\n        }\r\n\r\n        setTodoList(updateTodoList);\r\n        localStorage.setItem('todoList', JSON.stringify(updateTodoList));\r\n      }\r\n    }\r\n\r\n    useEffect(\r\n      () => {\r\n        var start = Date.now();\r\n        if (timerOn) {\r\n          const timer = setInterval(() => {\r\n            let time = startTime + Math.floor((Date.now() - start)/1000);\r\n            setElapsedTime(time);\r\n\r\n            if(pomodoro && time === props.focusTime){\r\n              clearInterval(timer);\r\n              props.playSound();\r\n              incrementCurrentTask();\r\n              setStudyTime(props.focusTime + studyTime);\r\n              ls.set('studyTime', props.focusTime + studyTime);\r\n              if(props.autoStartBreak){\r\n                startBreak();\r\n              }\r\n              else{\r\n                pressBreak();\r\n              }\r\n            } \r\n\r\n            if(!pomodoro && time === props.breakTime){\r\n              clearInterval(timer);\r\n              props.playSound();\r\n              if(currInterval < props.intervals){\r\n                setCurrInterval(currInterval + 1);\r\n                startPomodoro();\r\n              }\r\n              else{\r\n                pressBreak();\r\n              }\r\n            }\r\n        }, 100);\r\n          return () => clearInterval(timer);\r\n        }\r\n\r\n        if(date !== new Date(start).getDate()){\r\n          setStudyTime(0);\r\n          ls.set('studyTime', 0);\r\n          ls.set('date', new Date(start).getDate())\r\n          setDate(new Date(start).getDate());\r\n        }\r\n      },\r\n      [timerOn, startTime, pomodoro, props.focusTime, props.autoStartBreak]\r\n    );\r\n\r\n    function startTimer(){\r\n      setTimerOn(true);\r\n    }\r\n\r\n    function pauseTimer(){\r\n      setTimerOn(false);\r\n      setStartTime(elapsedTime);\r\n    }\r\n\r\n    function startPomodoro(){\r\n      setPomodoro(true);\r\n      setStartTime(0);\r\n      setElapsedTime(0);\r\n    }\r\n\r\n    function startBreak(){\r\n      setPomodoro(false);\r\n      setStartTime(0);\r\n      setElapsedTime(0);\r\n    }\r\n\r\n    function pressPomodoro(){\r\n      setTimerOn(false);\r\n      startPomodoro();\r\n    }\r\n\r\n    function pressBreak(){\r\n      setTimerOn(false);\r\n      startBreak();\r\n    }\r\n\r\n    function getRemainingTime(){\r\n      let time;\r\n      if(pomodoro){\r\n        time = props.focusTime - elapsedTime;\r\n      }\r\n      else{\r\n        time = props.breakTime - elapsedTime;\r\n      }\r\n\r\n      return <>{Math.floor(time / 60)}:{time % 60 < 10 ? '0' + time % 60 : time % 60}</>\r\n    }\r\n\r\n    function remainingPercentage(){\r\n      if(pomodoro) return Math.floor(elapsedTime/props.focusTime * 100);\r\n      else return Math.floor(elapsedTime/props.breakTime * 100);\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Row style = {{paddingBottom: \"50px\"}}>\r\n        <Col style = {{paddingTop: '25px'}} xs=\"col-12\" className=\"d-flex justify-content-center\">\r\n          <div>Today's Focus Time: {Math.floor(studyTime/3600)}h {Math.floor((studyTime % 3600)/60)}m</div>\r\n        </Col>\r\n        <Col style = {{paddingTop: '25px'}} xs=\"col-12\" className=\"d-flex justify-content-center\">\r\n          <ButtonGroup toggle>\r\n            <ToggleButton\r\n              type=\"radio\"\r\n              variant=\"outline-secondary\"\r\n              name=\"radio\"\r\n              checked={pomodoro}\r\n              onChange={() => pressPomodoro()}\r\n              value = \"1\"\r\n              className=\"shadow-none\"\r\n            >\r\n              Pomodoro\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              type=\"radio\"\r\n              variant=\"outline-secondary\"\r\n              name=\"radio\"\r\n              checked={!pomodoro}\r\n              onChange={() => pressBreak()}\r\n              value = \"2\"\r\n              className=\"shadow-none\"\r\n            >\r\n              Break\r\n            </ToggleButton>\r\n          </ButtonGroup>\r\n        </Col>\r\n        <Col xs=\"col-12\" className=\"d-flex justify-content-center\">\r\n          <LiquidFillGauge\r\n            style={{ margin: '0 auto'}}\r\n            value={!timerOn && elapsedTime === 0 ? 30: remainingPercentage()}\r\n            width= {250}\r\n            height={300}\r\n            percent=\"%\"\r\n            textSize={1}\r\n            textOffsetX={0}\r\n            textOffsetY={20}\r\n            textRenderer={() => {\r\n              return (\r\n                <tspan>\r\n                  <tspan style = {{fontSize: '65px'}} className=\"value\">{getRemainingTime()}</tspan>\r\n                </tspan>\r\n              );\r\n            }}\r\n            riseAnimation\r\n            riseAnimationTime={1000}\r\n            waveAnimation\r\n            outerRadius={.95}\r\n            waveFrequency={2}\r\n            waveAmplitude={timerOn ? 0 : 1}\r\n            circleStyle={{\r\n              fill: pomodoro ? \"#5AB9EA\" : \"#FFBD0B\"\r\n            }}\r\n            waveStyle={{\r\n              fill: pomodoro ? \"#5AB9EA\" : \"#FFBD0B\"\r\n            }}\r\n            textStyle={{\r\n              fill: \"#555555\",\r\n              fontFamily: 'Arial'\r\n            }}\r\n            waveTextStyle={{\r\n              fill: '#fff',\r\n              fontFamily: 'Arial'\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col xs=\"col-12\" className=\"d-flex justify-content-center\">\r\n          {timerOn ? <button style = {{width: \"100px\"}} className=\"btn btn-outline-secondary shadow-none\" onClick={()=>pauseTimer()}>Pause</button>\r\n            : <button style={{ width: \"100px\" }} className=\"btn btn-outline-secondary shadow-none\" onClick={() => startTimer()}>Start</button>}\r\n        </Col>\r\n      </Row>\r\n      <div className=\"d-flex justify-content-center\" style = {{marginBottom: '20px'}}>\r\n        {currentTask != null && todoList.filter(todo => todo.id === currentTask).length > 0 ? (\r\n          <div><b>Current Task: </b>{todoList.filter(todo => todo.id === currentTask)[0].task}</div>\r\n        ) : <div>&nbsp;</div>}\r\n      </div>\r\n      <TodoList \r\n        addTask={addTask} \r\n        todoList={todoList} \r\n        removeTask = {removeTask}\r\n        completeTask = {completeTask}\r\n        currentTask = {currentTask}\r\n        updateCurrentTask = {updateCurrentTask}\r\n      />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Timer","export default __webpack_public_path__ + \"static/media/bell.e69db03d.mp3\";","import {Navbar, Row, Col, Modal, Container} from 'react-bootstrap';\r\nimport {useState} from 'react';\r\nimport Timer from './Timer';\r\nimport ls from 'local-storage';\r\nimport '../styling/Header.scss';\r\nimport useSound from 'use-sound';\r\nimport bell from '../sounds/bell.mp3';\r\n\r\nfunction Header() {\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [focusTime, setFocusTime] = useState(ls.get('focusTime') || 25);\r\n  const [breakTime, setBreakTime] = useState(ls.get('breakTime') || 5);\r\n  const [autoStartBreak, setAutoStartBreak] = useState(ls.get('autoBreak') === 1 ? true : false);\r\n  const [intervals, setIntervals] = useState(ls.get('intervals') || 0);\r\n  const [volume, setVolume] = useState(ls.get('volume') || 0);\r\n\r\n  function openSettings(){\r\n    setShowSettings(true);\r\n  }\r\n\r\n  function closeSettings(){\r\n    if(focusTime < 1){\r\n      setFocusTime(1);\r\n    }\r\n    if(breakTime < 1){\r\n      setBreakTime(1);\r\n    }\r\n    if(intervals < 0){\r\n      setIntervals(0);\r\n    }\r\n    setShowSettings(false);\r\n  }\r\n\r\n  function updateFocusTime(e){\r\n    setFocusTime(e.target.value);\r\n    if(e.target.value > 0){\r\n      ls.set('focusTime', e.target.value);\r\n    }\r\n  }\r\n\r\n  function updateBreakTime(e){\r\n    setBreakTime(e.target.value);\r\n    if(e.target.value > 0){\r\n      ls.set('breakTime', e.target.value);\r\n    }\r\n  }\r\n\r\n  function updateIntervals(e){\r\n    setIntervals(e.target.value);\r\n    if(e.target.value >= 0){\r\n      ls.set('intervals', e.target.value);\r\n    }\r\n  }\r\n\r\n  function updateAutoBreak(){\r\n    setAutoStartBreak(!autoStartBreak)\r\n    let val = autoStartBreak ? 0 : 1;\r\n    ls.set('autoBreak', val);\r\n  }\r\n\r\n  function updateVolume(e){\r\n    setVolume(e.target.value);\r\n    ls.set('volume', e.target.value);\r\n  }\r\n\r\n  var [playSound] = useSound(\r\n    bell,\r\n    {volume: volume/100}\r\n  );\r\n\r\n  function testVolume(){\r\n    playSound()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Navbar bg=\"light\" variant=\"light\">\r\n          <Col md={{ span: 3, offset: 3 }} className=\"d-flex justify-content-begin\">\r\n            <Navbar.Brand style={{ fontWeight: '300' }}> Productivity Timer</Navbar.Brand>\r\n          </Col>\r\n          <Col md={{ span: 3, offsetRight: 3 }} className=\"d-flex justify-content-end\">\r\n            <button onClick = {()=>openSettings()} style={{ color: \"#555555\" }} className=\"btn btn-small shadow-none\">\r\n              <i style={{ color: \"#555555\" }} className=\"fa fa-cog fa-lg\"></i><span className=\"d-none d-sm-inline\"> settings</span></button>\r\n          </Col>\r\n        </Navbar>\r\n      </Row>\r\n      <Modal dialogClassName='modal-container' size = \"sm\" show={showSettings} onHide={closeSettings} aria-labelledby=\"contained-modal-title-vcenter\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title style = {{color:'#bfbfbf'}}>Timer Settings</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"show-grid\" style = {{fontWeight: '700'}}>\r\n          <Container>\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <div>\r\n                  <label style = {{color: \"#555555\"}}>Pomodoro</label>\r\n                  <input onChange = {updateFocusTime} value = {focusTime} style={{width: \"90px\"}} length = \"10\" type = \"number\" className=\"form-control shadow-none\"/>\r\n                </div>\r\n              </Col>\r\n              <Col className = \"d-flex justify-content-end\">\r\n                <div>\r\n                  <label style = {{color: \"#555555\"}} >Break</label>\r\n                  <input onChange = {updateBreakTime} value = {breakTime} style={{width: \"90px\"}} length = \"10\" type = \"number\" className=\"form-control shadow-none\"/>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row style = {{marginTop: \"20px\"}} className=\"align-items-center border-top\">\r\n              <Col style = {{marginTop: \"10px\"}}>\r\n                <div style = {{color:'#555555'}}>Auto Start Break</div>\r\n              </Col>\r\n              <Col className = \"d-flex justify-content-end\">\r\n                <div className='custom-control custom-switch'>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='custom-control-input shadow-none'\r\n                    id='autoBreakSwitch'\r\n                    checked = {autoStartBreak}\r\n                    onChange = {updateAutoBreak}\r\n                  />\r\n                  <label className='custom-control-label' htmlFor='autoBreakSwitch'>\r\n                  </label>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row style = {{marginTop: \"20px\"}} className=\"align-items-center border-top\">\r\n              <Col style = {{marginTop: \"10px\"}}>\r\n                <div style = {{color:'#555555'}}>Auto Start Intervals</div>\r\n              </Col>\r\n              <Col className = \"d-flex justify-content-end\">\r\n                <input onChange = {updateIntervals} value = {intervals} style={{width: \"70px\"}} length = \"2\" type = \"number\" className=\"form-control shadow-none\"/>\r\n              </Col>\r\n            </Row>\r\n            {/* <Row style = {{marginTop: \"20px\"}} className=\"align-items-center border-top\">\r\n              <Col style = {{marginTop: \"10px\"}}>\r\n                <div style = {{color:'#555555'}}>Browser Notification</div>\r\n              </Col>\r\n              <Col className = \"d-flex justify-content-end\">\r\n                <div className='custom-control custom-switch'>\r\n                  <input\r\n                    type='checkbox'\r\n                    className='custom-control-input shadow-none'\r\n                    id='notificationSwitch'\r\n                    checked = {notificationOn}\r\n                    onChange = {updateNotification}\r\n                  />\r\n                  <label className='custom-control-label' htmlFor='notificationSwitch'>\r\n                  </label>\r\n                </div>\r\n              </Col>\r\n            </Row> */}\r\n            <Row style = {{marginTop: \"20px\"}} className=\"align-items-center border-top\">\r\n              <Col>\r\n                <div style = {{color:'#555555'}}>Alarm</div>\r\n              </Col>\r\n              <Col style = {{marginTop: \"10px\"}} className = \"d-flex justify-content-end\">\r\n                <div>\r\n                  <input style = {{width: \"100px\"}} type=\"range\" min=\"0\" max=\"100\" onChange = {updateVolume} value={volume} className=\"slider\" id=\"myRange\"/>\r\n                  <button onClick={()=>testVolume()} style={{ width: \"100px\" }} className=\"btn btn-outline-secondary shadow-none\">Test: {volume}</button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <button className=\"btn btn-outline-secondary shadow-none\" variant=\"secondary\" onClick={closeSettings}>\r\n            Close\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Timer\r\n        focusTime = {focusTime * 60}\r\n        breakTime = {breakTime * 60}\r\n        autoStartBreak = {autoStartBreak}\r\n        intervals = {intervals}\r\n        playSound = {playSound}\r\n      />\r\n    </>\r\n  );\r\n}\r\n  \r\nexport default Header;","import Container from 'react-bootstrap/Container'\nimport Header from './components/Header'\n\nfunction App() {\n  return (\n    <Container fluid>\n      <Header/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}